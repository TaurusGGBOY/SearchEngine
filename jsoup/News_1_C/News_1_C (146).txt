还需要再学一门语言吗 技术更新迭代太快了 很多时候我会觉得自己非常缺乏安全感 我们依赖的技术环境是多变的 我们身处其中 每天看见的 听见的 没准就是自己不知道的 不知道的多了就会有点慌了 慌了总得想办法啊 那就学呗 别人炫什么 看起来很屌的样子 我也得试试看 遗憾的是 我们很难像机器那样 多开进程 的利用 一点不浪费 在努力工作的同时 再学习另外一门语言 不是那么容易 特别是还得让它成为你变现的技能 更难 我们中的很多人的目标是当全栈工程师 全栈并没有那么简单 又不是全干 变现也不是叠加溢价 相比之下如果有精力和天赋去全栈 倒不如再向外扩 跨界去做点别的 不应该比其他人更有优势吗 代码都能掌控 还有什么搞不定的 其实并不反对去学习其他语言 相反的 如果已经有一门相当在行的语言打底 再学习其他语言也非常快 有的时候还能相互印证 得到一些灵感 更好的去补足 会的语言多了 也就不局限于实现方式 大部分语言都能相互调用 这样就能选择最好的方式去实现 以工作中迫切需要的为好 比如为了熟练使用 可以简单学学 比如为了简化工作 避免一些重复劳动力 也可以学学 比如项目中有些页面是 可以也学学 更好的配合 同理 等 未来的语言趋势固然重要 但学习也需要环境和实践 避免周期过长导致放弃 焦虑可以 但是焦虑解决不了任何问题 最好还是要静下心 冷静思考 做什么对自己最有利 想要学习新东西 心里肯定是有危机感 那不如把你担心的都列出来 明确现在的处境 再有针对性出解决方案 到底是需求来了立马写代码 还是分析需求 定好方案 再做实现 我想大家都能分辨的清吧