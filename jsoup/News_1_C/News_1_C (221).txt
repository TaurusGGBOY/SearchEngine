一 单线程模式单例 二 多线程加锁单例 三 系统 创建单例 创建单例不仅可以解决多条线程的线程安全问题 也能保证性能 是官方推荐的方式 主要是根据 的值来决定怎么去执行代码 当 时 线程执行 的 中代码 当 时 线程跳过 的 中代码不执行 当 为其他值时 线程被阻塞 等待 值改变 当线程调用 此时 调用 中的代码 此时 的值变为 当其他线程再调用 方法时 的值已经是 了 线程阻塞 当 线程执行完 之后 变为 其他线程不再阻塞 跳过 下次再调用 时 已经为 直接跳过 优化完善 上面的方法是把其可能出现的初始化方法做了相应的处理来其保证安全性 其实我们可以在不做处理的情况下 禁止外部调用岂不是更简单 个人感觉该方法也很不错而且一些成熟的第三方中的单例中也有使用该方法的 直接在你创建的单例文件的 文件中加入代码 文件实现一个方法即可 上面方式的其他方法就不要写了