 网络请求使用的是 是一个强大易用的 请求库 支持 拦截器 请求取消 管理 文件上传 下载 数据解析是使用了 包 它是一个自动化源代码生成器 可以为我们生成 序列化模板 由于序列化代码不再由我们手写和维护 我们将运行时产生 序列化异常的风险降至最低 网络请求数据并且展示效果图 数据接口 数据是使用的聚合数据的 影讯 合集 大家可以注册个账号 申请使用一下 像这样 添加依赖 在 文件中添加所需要的第三方依赖库 网络请求过程分析 这个是最底层类封装了一个静态的请求方法 直接调用 的 方法进行网路请求 很简单 获取 方法很简单 就是字符串拼接了一下 下面分析一下 数据解析过程 如上所说 解析使用的是 包 它是一个自动化源代码生成器 可以为我们生成 序列化模板 网络请求获取到的 数据是这样的 类 生成的 类是这样的 有两种运行代码生成器的方法 一次性生成 通过在我们的项目根目录下运行 我们可以在需要时为我们的 生成 序列化代码 这触发了一次性构建 它通过我们的源文件 挑选相关的并为它们生成必要的序列化代码 虽然这非常方便 但如果我们不需要每次在 类中进行更改时都要手动运行构建命令的话会更好 持续生成 使用 可以使我们的源代码生成的过程更加方便 它会监视我们项目中文件的变化 并且在需要时自动构建必要的文件 我们可以通过 在项目根目录下运行来启动 只需启动一次观察器 然后并让它在后台运行 这是安全的 执行序列化只需执行 使用 最终展示结果 上面是初始化网络请求 在请求到数据后 调用 刷新 一个自定义的 好了 网络请求并且展示数据就这样实现的 最后附上 地址 