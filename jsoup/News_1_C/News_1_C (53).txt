一种高效 可靠 免费的高可用及负载均衡软件 非常适合于高负载站点的七层数据请求 客户端通过 代理服务器获得站点页面 而代理服务器收到客户请求后根据负载均衡的规则将请求数据转发给后端真实服务器 实现了一种事件驱动 单一进程模型 能支持非常大的并发连接数 同一客户端访问服务器 保持回话的三种方案 将客户端 进行 计算并保存 由此确保相同 访问时被转发到同一真实服务器上 依靠真实服务器发送给客户端的 信息进行回话保持 保存真实服务器的 及服务器标识 实现会话保持功能 无负载均衡 简单的无负载均衡 应用环境 用户会直接接入 服务器 即 且其中不存在负载均衡机制 如果单一 服务器发生故障 用户将无法接入该服务器 另 若多位用户同时访问该服务器 且其无法处理该负载 则会出现响应缓慢或者无法接入的情况 四层负载均衡 最为简单的负载均衡方式 将网络流量引导至多台服务器以使用四层 即传输层 负载均衡 这种方式会根据 范围与端口进行用户流量转发 例如 有请求指向 则该流量将被转发至 即将用户请求转发至后端服务器的 组 被选定的后端服务器将直接响应用户请求 中的全部服务器都应当拥有同样的内容 否则用户可能会遭遇内容不一致问题 七层负载均衡 网络流量使用 层负载均衡意味着均衡器能够根据用户的请求内容将请求转发至不同后端服务器 这种方式允许在同一域名及端口上运行多套 应用服务器 例如 用户向 发送请求 则会被转发至 后端 其包含一组运行有同一 应用的服务器 其它请求则会被转发至 其负责运行其它应用 总的来说 它可以根据 端口 的方式进行负载分流 还可以根据网站的 访问域名 浏览器类别 语言等决定负载均衡的策略 七层代理 四层代理 四层 七层 优势 跨平台性 配置简单 容易上手 非阻塞 高并发连接 事件驱动 通信机制采用 模型 支持更大的并发连接 结构 内存消耗小 内置的健康检查功能 支持 压缩 稳定性高 用于反向代理 宕机的概率微乎其微 会话保持 通过调度算法实现 动静分离 基于 匹配正则 抗负载能力强 强大的四层代理 媲美 硬件的四层代理 对内存和 资源消耗比较低 配置性比较低 工作稳定 自身有完整的双机热备方案如 无流量 只分发请求 而流量并不从它本身出去 这点保证了均衡器 的性能不会受到大流量的影响 会话保持 支持 的保持 的引导 同时支持通过获取指定的 来检测后端服务器的状态 基于 协议的负载效率高于 负载均衡策略非常多 动静分离 支持 规则匹配 高效稳定 节点健康检查 支持多种方式检测 如端口 劣势 适用性低 仅能支 持 和 协议 这样就在适用范围上面小些 对后端服务器的健康检查 只支持通过端口来检测 不支持通过 来检测 不支持 的直接保持 但能通过 来解决 不适用于高负载量的并发集群 健康检查 无法检查后端节点的健康情况 动静分离 不支持正则 无法区分请求 实现比较麻烦 网络环境依赖性较大 扩展性差 添加新功能很费劲 对不断扩展的新业务 很难应对 在四层代理时 仅支持 协议的代理 总结 配置文件样例