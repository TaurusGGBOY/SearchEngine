 是 自 发布于 年 之后的最重要的版本 这里我们罗列了 中的核心新特性 在 接口中引入了 方法 因此在编写代码时 我们只需关注业务逻辑 方法使用 作为参数 因此它有助于将业务逻辑放在可以重用的单独位置 对接口进行了增强 允许接口具有已经实现了的方法 我们可以使用 和 关键字来创建带实现方法的接口 例如 接口中的 方法便是一个默认方法 默认方法不能覆盖 中的方法 如果层次结构中的任何类都有一个具有相同签名的方法 那么默认方法就变得不相关了 因为实现接口的任何类都已经将对象作为超类来实现 如果我们在接口中使用了 默认方法 那么它将变得无关紧要 这就是为什么为了更清晰起见 不允许接口拥有对象类默认方法 在 中的接口中不仅增加了默认方法 还增加了静态方法 使用方式接口名 方法名 函数式接口是 中引入的新概念 包里的函数式接口 表达式是一段可以传递的代码 它的核心思想是将面向对象中的传递数据变成传递行为 我们回顾一下在使用 之前要做的事 之前我们编写一个线程时是这样的 也有人会写一个类去实现 接口 这里采用匿名内部类的目的 就是为了方便 程序员将代码作为数据传递 不过 匿名内部 类还是不够简便 为了执行一个简单的任务逻辑 不得不加上 行冗繁的样板代码 那如果是 该怎么做 在 中我们遵循如下的表达式来编写 表达式的类型为函数式接口 中添加了一个新的 用于对集合执行 类似的操作 允许顺序执行和并行执行 对比 特点 对 的操作分为为两类 中间操作 和结束操作 二者特点是 在新的时间 中 表示一个精确的时间点 和 表示两个时间点之间的时间量 表示日期 即 年 月 日 即不包括时间也不带时区 与 类似 但只包含时间 则包含日期和时间 表示一个带时区的时间 提供格式化和解析功能 下面详细的介绍使用方法 略