1.sshd简介 sshd=secure shell ##可以通过网络在主机中开机shell的服务 客户端软件：sshd 连接方式： 注：第一次链接陌生主机要建立认证文件，会询问是否建立，输入yes。 第二次建立已经生成了～/.ssh/know_hosts文件所以不需要再次建立。 远程复制： 1.虚拟机与远程主机的连接 2. 连接其他主机（由于实现环境下，只是使用了一台电脑，就用两台虚拟机模拟两台主机的互联）: 其实方式与虚拟机与主机的链接类似。 证明主机172.25.71.111与主机172.25.71.222已经链接起来。 3.连接其他主机，生成RSA加密 注：此时若为第一次链接，是需要输入密码的，但第二次就可以实现免密通信。 4.修改配置文件，锁定用户权限。 如果这样把密钥分配给另一个主机，但只要另一个主机想要访问本机那么就一定可以访问，这也不符合本机需求，所以我们 需 要将这个权限放到自己手中可以将放到本机里的锁删除，所以即使有密钥也不能登陆也同时也限制密钥登陆将/etc/ssh/sshd_config的第78行下，将密码登陆的权限由yes改成了no，限制密码登陆。如果有需要的话，在加入锁，使有密钥的人免密登陆，或者直接修改配置文件权限，密码登陆。 但加上锁之后，就可以用密钥免密登陆。 5.sshd的安全设定 可以通过修改配置文件，来控制登陆服务器的用户以及登陆方式。来使服务更加安全。 注：登陆时所用的用户名时被连接主机的用户名，要分清楚使用的到底是哪一台主机的用户和密码。并且一旦设置了白名单/黑名单，超级用户若不在也不可登陆。 实现方法：vim修改配置文件，将配置文件进行修改。通过一台客户端机链接服务端（ssh 用户名@ip地址），但是需要注意链接语句中的用户时服务机上的用户。 修改是否允许用户登陆系统密码登陆将第78行中的no修改到yes： 设置用户白名单，westos在白名单student用户不可登陆： 6.添加sshd登陆信息 vim /etc/motd ##文件内容就是登陆后显示内容 7.用户登陆审计  系统权限控制：  可以发现reload与restart的区别，经过reload，进程pid不变，所以证明并没有关闭进程而完成了系统配置文件的加载，但是restart则是将进程关闭，然后重启，进程pid自然发生变化。