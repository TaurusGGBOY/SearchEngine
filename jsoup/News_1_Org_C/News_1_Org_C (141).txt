一.编程语言概念： 是用来定义计算机程序的形式语言。它是一种被标准化的交流技巧，用来向计算机发出指令。一种计算机语言让程序员能够准确地定义计算机所需要使用的数据，并精确地定义在不同情况下所应当采取的行动。 二.编程语言的分类： 汇编语言 汇编语言的实质和机器语言是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，更容易识别和记忆。它同样需要编程者将每一步具体的操作用命令的形式写出来。汇编程序通常由三部分组成： 指令、 伪指令和 宏指令。 汇编程序的每一句指令只能对应实际操作过程中的一个很细微的动作。例如移动、自增，因此汇编 源程序一般比较冗长、复杂、容易出错，而且使用汇编语言编程需要有更多的计算机专业知识，但汇编语言的优点也是显而易见的，用汇编语言所能完成的操作不是一般高级语言所能够实现的，而且源程序经汇编生成的 可执行文件不仅比较小，而且执行速度很快。 脚本语言 脚本语言是为了缩短传统的编写-编译-链接-运行过程而创建的计算机 编程语言。此命名起源于一个 脚本“screenplay”，每次运行都会使对话框逐字重复。虽然许多脚本语言都超越了计算机简单任务自动化的领域，成熟到可以编写精巧的程序，但仍然还是被称为脚本。几乎所有计算机系统的各个层次都有一种脚本语言。包括操作系统层，如 计算机游戏，网络应用程序，字处理文档，网络 软件等。在许多方面，高级编程语言和 脚本语言之间互相交叉，二者之间没有明确的界限。 脚本编程速度更快，且脚本文件明显小于如同类C 程序文件。这种灵活性是以执行效率为代价的。脚本通常是解释执行的，速度可能很慢，且运行时更耗内存。 脚本语言是一种解释性的语言，例如Python，vbscript, javascript,installshield script,ActionScript等等，它不象c\ c++等可以 编译成 二进制代码，以可执行文件的形式存在。 机器语言 由于计算机内部只能接受二进制代码，因此，用二进制代码0和1描述的指令称为机器指令，全部机器指令的集合构成计算机的机器语言，用机器语言编程的程序称为 目标程序。只有目标程序才能被计算机直接识别和执行。但是机器语言编写的程序无明显特征，难以记忆，不便阅读和书写，且依赖于具体机种，局限性很大，机器语言属于低级语言。 高级语言 高级语言是大多数编程者的选择。和汇编语言相比，它不但将许多相关的 机器指令合成为单条指令，并且去掉了与具体操作有关但与完成工作无关的细节，例如使用 堆栈、 寄存器等，这样就大大简化了程序中的指令。同时，由于省略了很多细节， 编程者也就不需要有太多的专业知识。 高级语言主要是相对于汇编语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，像最简单的编程语言 PASCAL语言也属于高级语言。 高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，按转换方式可将它们分为两类： 解释类：执行方式类似于我们日常生活中的“ 同声翻译”，应用程序 源代码一边由相应语言的 解释器“翻译”成目标代码（机器语言），一边执行，因此效率比较低，而且不能生成可独立执行的 可执行文件，应用程序不能脱离其解释器，但这种方式比较灵活，可以动态地调整、修改应用程序。如较早时期的 Qbasic语言。 编译类：编译是指在应用源程序执行之前，就将程序源代码“翻译”成目标代码（机器语言），因此其目标程序可以脱离其语言环境独立执行，使用比较方便、效率较高。但应用程序一旦需要修改，必须先修改源代码，再重新编译生成新的目标文件（* .obj，也就是 OBJ文件）才能执行，只有目标文件而没有源代码，修改很不方便。 三.常见编程语言： C语言 C语言是一种 计算机程序设计语言，它既具有 高级语言的特点，又具有 汇编语言的特点。它由美国贝尔研究所的D.M.Ritchie于1972年推出，1978年后，C语言已先后被移植到大、中、小及微型机上，它可以作为工作系统设计语言，编写系统 应用程序，也可以作为应用程序设计语言，编写不依赖计算机硬件的应用程序。它的应用范围广泛，具备很强的数据处理能力，不仅仅是在软件开发上，而且各类科研都需要用到C语言，适于编写系统软件，三维，二维图形和动画，具体应用比如单片机以及 嵌入式系统开发。 优点 ⑴C语言灵活性好，效率高，可以接触到软件开发比较底层的东西。 ⑵微软的MFC库博大精深，学会它可以让随心所欲地进行编程。 ⑶VC是微软制作的产品，与操作系统的结合更加紧密。 缺点 ⑴对使用者的要求比较高，既要具备丰富的C语言编程经验，又要具有一定的WINDOWS编程基础，它的过于专业使得一般的编程爱好者学习起来会有不小的困难。 C++ C++这个词在 中国大陆的 程序员圈子中通常被读做“C加加”，而西方的程序员通常读做“C plus plus”，“CPP”。 它是一种使用非常广泛的 计算机编程语言。C++是一种静态 数据类型检查的、支持多重编程范式的通用 程序设计语言。它支持过程化 程序设计、 数据抽象、 面向对象程序设计、 泛型程序设计等多种 程序设计风格。 优点 ⑴继承了C语言的全部优点。 ⑵完全的可视化。 ⑶极强的兼容性，支持OWL、VCL和MFC三大类库。 ⑷编译速度非常快。 缺点 ⑴由于推出的时间太短，关于它的各种资料还不太多。 JAVA Java是一种可以撰写跨平台应用软件的面向对象的程序设计语言，是由 Sun Microsystems公司于1995年5月推出的Java程序设计语言和 Java平台（即JavaSE, JavaEE, JavaME）的总称。Java 技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于个人PC、 数据中心、游戏控制台、 科学 超级计算机、移动电话和 互联网，同时拥有全球最大的开发者专业社群。在全球云计算和移动互联网的产业环境下，Java更具备了显著优势和广阔前景。 优点： （1）Java平台不断迎来新功能，比如移动互联网时代的Android，大数据时代的Hadoop，人工智能时代的TensorFlow。 （2）Java是世界上使用范围最广的语言 缺点： （1）Java占用大量内存，并且启动时间较长 （2）国内Java及其衍生技术的就业环境被培训班破坏得严重 SQL 结构化查询语言(Structured Query Language)简称 SQL，是一种数据库查询和 程序设计语言，用于存取数据以及查询、更新和管理 关系数据库系统；同时也是 数据库脚本文件的扩展名。结构化查询语言是高级的非过程化编程语言，允许用户在高层 数据结构上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同 数据库系统可以使用相同的结构化查询语言语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使他具有极大的灵活性和强大的功能。 SQL语言结构简洁，功能强大，简单易学，所以自从IBM公司1981年推出以来，SQL语言，得到了广泛的应用。如今无论是像Oracle,Sybase,Informix,SQL server这些大型的数据库管理系统，还是像 Visual Foxpro， PowerBuilder这些微机上常用的数据库开发系统，都支持SQL语言作为查询语言。 优点： （1）存储过程可以重复使用,可减少数据库开发人员的工作量，开发速度快。 （2）SQL可设定只有某此用户才具有对指定存储过程的使用权，安全性好。 缺点 （1）和Java语言的大多数设计模式一样，SQL开发速度是靠牺牲运行速度换来的。 （2）不同数据库系统之间的SQL不能完全相互通用，可移植性差。 JavaScript Javascript，一种高级编程语言，通过解释执行，是一门动态类型，面向对象（基于原型）的直译语言。 JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。 JavaScript虽与Java有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。 优点： （1）作为脚本语言，JavaScript可立即运行而无需等待服务器响应，速度非常出色。 （2）JavaScript是动态类型语言，学习难度低。并且掌握了JavaScript语言就等于成为能同时开发网页（HTML5）、后台（Node.js）、移动端（React Native、Weex）的全栈工程师。 缺点： （1）代码在用户电脑上运行，可能会被别有用心的坏人恶意利用。 （2）JavaScript过于依赖浏览器，在不同的浏览器上有不同的表现。 四.参考资料 https://blog.csdn.net/fyy_lufan/article/details/81130020 https://blog.csdn.net/u010921682/article/details/75012483 以上编程语言优缺点部分参考整合第四点参考资料，如有错误，请指出，我会及时纠正，加以学习?(?>?<?)?