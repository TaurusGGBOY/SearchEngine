2012年，“微服务架构”这个术语出现了，直到2014年才开始被关注。微服务是一种架构风格，一种将软件应用程序设计为可独立部署的服务套件的特定方式。虽然这种架构风格没有确切的定义，但是从名称看来，微服务注重的是“微”，注重的是“服务”，围绕业务能力，自动化部署，端点智能以及语言和数据的分散控制等方面存在着某些共同特征。 “微服务” - 近几年来是一个新名词，许多项目在过去几年中都采用了这种风格，相比往年的分模块开发和单体应用项目而言，得到的 迄今为止的结果是积极的，甚至在未来的几年中，微服务架构的理念会广为流传，成为众多公司项目的首选。因此对于很多互联网公司来说，微服务架构将会成为构建企业应用程序的默认风格。 简单来说，微服务架构是一种将单体应用程序当中的各种功能拆分为各个不同的服务，每个服务部署成一个项目独立运行，各个服务之间是松耦合的，每个服务只关注自己本身的功能。每种应用程序都在其自己的进程中运行，并与轻量级机制（通常是HTTP资源的API）进行通信。这些服务是围绕业务功能构建的，可以通过全自动部署机制进行独立部署。 可以在“自己的程序”中运行，并通过“轻量级设备与HTTP型API进行沟通”。关键在于该服务可以在自己的程序中运行。通过这一点我们就可以将服务公开与微服务架构（在现有系统中分布一个API）区分开来。在服务公开中，许多服务都可以被内部独立进程所限制。如果其中任何一个服务需要增加某种功能，那么就必须缩小进程范围。在微服务架构中，只需要在特定的某种服务中增加所需功能，而不影响整体进程，减少了单体应用时期一项报错整体瘫痪的情况。 微服务架构模式有许多非常好的地方。