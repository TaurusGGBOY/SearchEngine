Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。只要在supervisor的配置文件中，把要管理的进程的可执行文件的路径写进去即可。当子进程挂掉的时候，父进程可以准确获取子进程挂掉的信息的，可以选择是否自己启动和报警。supervisor还提供了一个功能，可以为supervisord或者每个子进程，设置一个非root的user，这个user就可以管理它对应的进程。 标题写的是Nginx，其实管理其他的进程也是一样的道理 supervisor是基于python写的，所以我们用pip来安装。（我的操作目录是/home/work/super，操作用户是root，如果你不是root身份，有的命令可能需要加上sudo提权） 我的操作目录是 /home/work/super supervisor默认是没有配置文件的，所以如果不想从头“写”起，我们可以自己手动生成一份默认的配置文件。 【注：配置文件里面，前面加 ; 表示注释】 先贴一份自己用的，比较懒，带注释的也贴出来了。【后面还有一份带讲解的配置文件。想深入了解的小伙伴可以取看一下】 接下来是对配置文件的一些选项进行讲解了，说的不是很全面，大伙看看就好 老规矩，先贴一个自己用的 【nginx的这个启动命令默认是后台启动，supervisor不能监控后台程序，所以就会一直执行这个命令，不断的启动Nginx，就会报错。 加上-g ‘daemon off;’ 这个参数可解决这问题。】 调用的配置文件的讲解 到这里基本就算是完成了，我们可以直接干掉nginx，然后再启动supervisor就可以了，它会自动把nginx启动起来 输入命令supervisorctl，可以进入交互界面，看到它监管的进程状态，如下 也可以直接用非交互的方式，在终端输入supervisorctl进行管理 欢迎各位指出不足 QQ：925124317