上一篇文章我们主要讲了视频播放器开发之前需要准备的一个知识，TextureView，用于对图像流的处理。这篇文章开始构建一个基础的视频播放器。 在之前的文章已经说过了，播放器也是一个view，我们要在这个view上播放视频流。所以我们要自定义一个简单的viewgroup，比如继承FrameLayout。还出就是布局简单，其他控件可以往上面添加。大家见过的视频播放器的控制器都是放在视频的上方的。这样就是用FrameLayout布局是最好的。 这是一个用于承载显示‘数据流’的View，它不会创建新的窗口来显示内容。它是将内容流直接投放到View中，并且可以和其它普通View一样进行移动，旋转，缩放，动画等变化。 TextureView初始化方式如下，并且我们这个播放器View要实现其监听方法： 然后我们把这个TextureView添加到我们的视频播放器的view上，并且设置跟视频播放器View一样大小： 一个公司想要实现机的播放器内核需要一定的成本，所以大部分公司都选择使用第三方的内核，比如bilibili开源的ijkplayer。ijkplayer是一个基于FFmpeg的轻量级Android/iOS视频播放器。FFmpeg的是全球领先的多媒体框架，能够解码，编码，转码，复用，解复用，流，过滤器和播放大部分的视频格式。它提供了录制、转换以及流化音视频的完整解决方案。这里我们也用它。 在项目module的gradle里面添加依赖： 编译成功之后我们就可以在代码里面用它了，这个也很简单一般不会出什么问题。ijplayer里面提供了一个IMediaPlayer，我们初始化它即可： 准备工作都做好了，我们要在什么时候开始播放呢？当然是TextureView准备好之后就可以播放了，TextuerView的draw方法中会调用TextureLayer layer = getTextureLayer();方法，而getTextureLayer()这个方法中当surface创建成功之后会执行我们实现的接口方法： 从上面代码可以看出当我们设置了mListener，并且创建surface成功之后会为我们回调onSurfaceTextureAvailable方法，并传递给我们一个mSurface及其宽高。那我们在这个方法里播放视频就可以了： 我们自己创建一个SurfaceTexture对象存储TextureView给我传递的SurfaceTexture对象，然后开启视频播放。如果你自己实现了SurfaceTexture，你也可以用你自己的。 使用ijplayer播放视频很简单，只要为其设置数据源即可。但是为了能让视频显示出来，也就是能在view上播放出来，我们需要使用Surface。 创建对象private Surface mSurface;，传入刚才存储的SurfaceTexture对象：mSurface = new Surface(mSurfaceTexture);，然后把这个surface对象传递给播放器即可，最后使用播放器开始播放，注意这个方法是同步的。 完成以上步骤，简单的视频播放器就可以完成了。 代码： 我们把代码进行整理如下： 播放器 使用布局： 在activity中的布局加上即可 在activity中获取播放器view，然后设置一个视频URL，开启播放即可。 以上就完成了视频播放器的初体验。其实你会发现这是多么简单啊。实际上来说一个高级开发人员并没有比你高明多少，他们比你多的其实只是经验和思路。所以想要从初中级开发跳跃到高级开发，需要你不断的思考，独立实现业务需求。如果给你一个大模块，你能利用你的知识，和网络获取的资料就能实现，你离高级开发工程师就不远了。 Android进阶：自定义视频播放器开发（上） 需要相关教学视频及源码，可以点击链接加入群聊【Android技术开发交流】：https://jq.qq.com/?_wv=1027&k=5PWTvm9，找群管理免费领取一下，欢迎进群一起学习交流