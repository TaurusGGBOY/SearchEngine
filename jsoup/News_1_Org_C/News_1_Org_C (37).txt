由于本人在自学Android开发，所以准备记下学习过程中的一些琐碎的知识点，本篇文章主要是介绍一些UI方面的知识点，（登录界面）总的UI实现效果如下，自行与下述各部分一一对应  改为我们设计的颜色： 或者直接增加一条item 当item<android:statusBarColor>和item<colorPrimaryDark>同时出现时，前者优先级更高，会覆盖后者的设置 colorPrimaryDark和statusBarColor两者的异同点： 相同点： 都用来修改StatusBar的颜色 Android5.0以上才支持的 不同点： statusbarColor具有更高的优先级 statusBarColor在Android5.0以下会出现警告提示 默认情况下，statusBarColor的值会继承自colorPrimaryDark 设置欢迎界面在一定的延迟时间后，跳转到指定界面的步骤： （1）创建Timer对象 （2）调用Timer的schedule，重写TimerTask并设置延迟时间 在app/src/main/res/layout中创建nav_bar.xml，代码自定义如下：  其中@mimap/back和@mimap/me为app/src/main/res/mipmap-hdpi下的自己引入的图片 @string/initNavBarTitle为app/src/main/res/values/string.xml下定义的字符串变量 @dimen/navBarTitleSize、@dimen/navBarHeight、@dimen/marginSize为app/src/main/res/values/dimen.xml中自定义的变量，其中 @dimen/navBarTitleSize为navigationBar中的TextView的文本大小，@dimen/navBarHeight为navigationBar的高度，@dimen/marginSize为navigationBar的内间距， 定义示例： 在其他界面引入布局文件中，只需使用include方法，示例如下： 1.自定义属性 （1）确定需要自定义的属性后，在app/main/res/values中新建一个命名为attrs的xml文档（如果已经存在则不需要重新创建） （2）添加自定义变量 2.自定义控件 （1）代码 创建一个InputView继承FrameLayout，然后重写方法，并且绑定自定义布局和布局关联自定义属性，代码如下 （2）View布局 在app/src/main/res/layout中创建input_view.xml （2）添加自定义View，"android:"是使用系统定义属性时使用，"app:"使用自定义属性时使用 在app/src/main/res/values/styles.xml中中添加自定义控件，下文分别为，自定义直线和自定义按钮格式的style标签 上面代码中的@drawable/btn_commit_selector是自定义的空间颜色，在该xml中设定了控件在不同情况下的不同显示结果，该xml的路径为app/src/main/res/drawable/btn_commit_selector，代码如下 @drawable/commit_btn_n和@drawable/commit_btn_h为按钮默认和高亮两种情况下对应的空间形状，对应如下 由于在登录注册时，都要把用户填写的数据传送要服务器进行验证，所以如果在客户端先进行用户输入合法性验证，那么就可以减少原先用来传送不合法数据的资源，使得资源利用率更高。 第三方包地址为：https://github.com/Blankj/AndroidUtilCode 由此使用AndroidUtilCode包来进行验证,步骤如下 （1） 引入第三方库 在当前模块的build.gradle中引入第三方库 （2）初始化AndroidUtilCode 使用AndroidUtilCode库要先初始化，初始化方法为Utils.init(Application)，所以在我们自定义的Application中初始化 （3） 创建静态类方法，用于传入参数进行验证 由于验证手机号输入合法性和密码合法性是全局使用的方法，所以新创建一个全局静态类，在其中创建静态方法，以供调用验证 （4） 验证手机号提供了"简单"和"精确"两种方法 AndroidUtilCode提供的验证手机号码的犯法有两种RegexUtils.isMobileExact()和RegexUtils.isMobileSimple()：前者是精准匹配（即确认已发布的码段）,而后者是简单匹配（即验证输入手机号是否为1开头且11位），两者主要的区别就是内部调用的正则表达式不同  定义全局动画的步骤： 1. 自定义动画 在app/src/main/res/anim（没有便自己创建）下，创建动画 android:fromXDelta="100%"表示activity的起始位置为最右边，android:toXDelta="0%"表示activity的停止位置为最左边，android:duration为动画时间，@integer/animation_time为我们自己在app/src/main/res/values/integers.xml下自定义的变量的 open_exit android:fromXScale、android:fromYScale为原始尺寸Y，android:toXScale、android:toYScale为缩放尺寸；android:pivotX，android:pivotY指定缩放中心，这里指明缩放中心是界面中心 close_exit close_enter 2. 定义全局动画的步骤： 在app/src/main/res/values/styles.xml定义劝酒全局动画AnimationActivity （1）打开Activity时 （2）退出Activity时 