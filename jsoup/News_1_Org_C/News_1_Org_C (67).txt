####系统中输入输出的管理#### 1.理解系统的输入输出重定向 输入重定向是指把文件导入到命令中，而输出重定向则是把原本要输出到屏幕的数据信息写入到指定文件中。 2.管理输入输出的符号 ##输出重定向 注意： 重定向会覆盖原文件内容 ####find命令#### 用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。 常用选项： -group<群组名称>：查找符合指定之群组名称的文件或目录； -name<范本样式>：指定字符串作为寻找文件或目录的范本样式； -nouser：找出不属于本地主机用户识别码的文件或目录； -user<拥有者名称>：查找符和指定的拥有者名称的文件或目录； 示例如下： ####管道的应用#### 1.管道的作用 “|” 管道的作用是把前一条命令的输出变成后一条命令的输入 注意： 管道只允许正确输出通过 通过管道的输出将会变成输入，而变成输入的这些输出是会被第二条命令处理的 如果需要保存输出内容，那么需要复制一份输出，用到的命令是“tee” 此实验在普通用户下操作： 小结：2>&1与&> 的差距 &> 是重定向输出， 所以需要说明重定向到哪里 2>&1 没有重定向，还是find的输出指令 用管道符转为输入 ####输入重定向#### ####vim的常用功能## 1，vim的模式 2，命令模式 1） 调整vim的工作方式 参数如下：  注意： 在vim程序中设定的vim工作方式是临时的，在vim关闭后会还源 如果要永久保存vim的工作方式需要编辑（添加或删除）vim的配置文件:/etc/vimrc 2 ) 字符的搜索 3)字符的管理 4)vim可视化模式 5)字符的替换 注意： %s标示所有的行 g标示所有的列 6）vim 的分屏功能  7)在命令模式下光标的移动 #####插入模式###### 1）插入模式下光标的移动 ####vim的退出模式##### 注意： 所编辑的只读文件必须是当前用户的文件 或者当前操作的用户是root